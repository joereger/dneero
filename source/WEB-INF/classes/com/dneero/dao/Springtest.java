package com.dneero.dao;


import com.dneero.dao.spring.BasePersistentClass;
import com.dneero.dao.hibernate.HibernateUtil;
import com.dneero.session.AuthControlled;
import com.dneero.systemprops.WebAppRootDir;
import org.apache.log4j.Logger;
import org.hibernate.HibernateException;
import org.hibernate.Session;
import org.springframework.orm.hibernate3.HibernateCallback;
import org.springframework.core.io.FileSystemResource;
import org.springframework.core.io.Resource;
import org.springframework.beans.factory.xml.XmlBeanFactory;
import org.springframework.beans.factory.BeanFactory;
import java.sql.SQLException;

/**
 * Blogger generated by hbm2java
 */

public class Springtest extends BasePersistentClass implements java.io.Serializable, AuthControlled {


    // Fields
     private int springtestid;
     private String foo;
     private String bar;

//    public static Springtest get(int id) {
//        Logger logger = Logger.getLogger("com.dneero.dao.Springtest");
//        try {
//            logger.debug("Springtest.get(" + id + ") called.");
//            //@todo Can't call this xml loader each time
//            Resource resource = new FileSystemResource(WebAppRootDir.getWebAppRootPath()+"/WEB-INF/classes/spring-hibernate.xml");
//            BeanFactory factory = new XmlBeanFactory(resource);
//            Springtest springtest = (Springtest)factory.getBean("Springtest");
//            Springtest obj = (Springtest)springtest.sessionFactory.getCurrentSession().get(Springtest.class, id);
//            if (obj == null) {
//                logger.debug("Springtest.get(" + id + ") returning new instance because hibernate returned null.");
//                return new Springtest();
//            }
//            return obj;
//        } catch (Exception ex) {
//            logger.error("com.dneero.dao.Springtest", ex);
//            return new Springtest();
//        }
//    }
//
//    public static Springtest getNew(){
//        Logger logger = Logger.getLogger("com.dneero.dao.Springtest");
//        try {
//            logger.error("Springtest.get() called.");
//            //@todo Can't call this xml loader each time
//            Resource resource = new FileSystemResource(WebAppRootDir.getWebAppRootPath()+"/WEB-INF/classes/spring-hibernate.xml");
//            BeanFactory factory = new XmlBeanFactory(resource);
//            Springtest springtest = (Springtest)factory.getBean("Springtest");
//            return springtest;
//        } catch (Exception ex) {
//            logger.error("com.dneero.dao.Springtest", ex);
//            return null;
//        }
//    }
     

    public static Springtest get(int id) {
        Logger logger = Logger.getLogger("com.dneero.dao.Springtest");
        try {
            logger.error("Springtest.get(" + id + ") called.");
            //@todo Can't call this xml loader each time
            Resource resource = new FileSystemResource(WebAppRootDir.getWebAppRootPath()+"/WEB-INF/classes/spring-hibernate.xml");
            BeanFactory factory = new XmlBeanFactory(resource);
            Springtest springtest = (Springtest)factory.getBean("Springtest");
            return springtest.get(String.valueOf(id));
        } catch (Exception ex) {
            logger.error("com.dneero.dao.Springtest", ex);
            return null;
        }
    }

    public static Springtest getNew(){
        Logger logger = Logger.getLogger("com.dneero.dao.Springtest");
        try {
            logger.error("Springtest.get() called.");
            //@todo Can't call this xml loader each time
            Resource resource = new FileSystemResource(WebAppRootDir.getWebAppRootPath()+"/WEB-INF/classes/spring-hibernate.xml");
            BeanFactory factory = new XmlBeanFactory(resource);
            Springtest springtest = (Springtest)factory.getBean("Springtest");
            return springtest;
        } catch (Exception ex) {
            logger.error("com.dneero.dao.Springtest", ex);
            return null;
        }
    }


    public Springtest get(final String id){
        HibernateCallback callback = new HibernateCallback() {
            public Object doInHibernate(Session session)
                throws HibernateException, SQLException {
                return session.load(Springtest.class, id);
            }
        };
        return (Springtest)hibernateTemplate.execute(callback);
    }

    public void save(final Springtest springtest){
        HibernateCallback callback = new HibernateCallback() {
            public Object doInHibernate(Session session)
                throws HibernateException,SQLException {
                session.saveOrUpdate(springtest);
                return null;
            }
        };
        hibernateTemplate.execute(callback);
    }

    public void save(){
        HibernateCallback callback = new HibernateCallback() {
            public Object doInHibernate(Session session)
                throws HibernateException,SQLException {
                session.saveOrUpdate(this);
                return null;
            }
        };
        hibernateTemplate.execute(callback);
    }



    // Constructors

    /** default constructor */
    public Springtest() {
    }

    public boolean canRead(User user){
        return true;
    }

    public boolean canEdit(User user){
        return canRead(user);
    }

    // Property accessors

    public int getSpringtestid() {
        return springtestid;
    }

    public void setSpringtestid(int springtestid) {
        this.springtestid=springtestid;
    }

    public String getFoo() {
        return foo;
    }

    public void setFoo(String foo) {
        this.foo=foo;
    }

    public String getBar() {
        return bar;
    }

    public void setBar(String bar) {
        this.bar=bar;
    }
}