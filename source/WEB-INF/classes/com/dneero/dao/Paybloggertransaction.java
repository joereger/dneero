package com.dneero.dao;

import com.dneero.dao.hibernate.BasePersistentClass;
import com.dneero.dao.hibernate.RegerEntity;
import com.dneero.dao.hibernate.HibernateUtil;
import com.dneero.util.GeneralException;
import com.dneero.session.AuthControlled;

import java.util.Date;
import java.util.Set;
import java.util.HashSet;

import org.apache.log4j.Logger;

/**
 * Blogger generated by hbm2java
 */

public class Paybloggertransaction extends BasePersistentClass implements java.io.Serializable, RegerEntity, AuthControlled {


    // Fields
     private int paybloggertransactionid;
     private int paybloggerid;
     private Date transactiondate;
     private Double amt;
     private boolean issuccessful;
     private String notes;

    //Validator
    public void validateRegerEntity() throws GeneralException {

    }

    //Loader
    public void load(){

    }

    public static Paybloggertransaction get(int id) {
        Logger logger = Logger.getLogger("com.dneero.dao.Paybloggertransaction");
        try {
            logger.debug("Paybloggertransaction.get(" + id + ") called.");
            Paybloggertransaction obj = (Paybloggertransaction) HibernateUtil.getSession().get(Paybloggertransaction.class, id);
            if (obj == null) {
                logger.debug("Paybloggertransaction.get(" + id + ") returning new instance because hibernate returned null.");
                return new Paybloggertransaction();
            }
            return obj;
        } catch (Exception ex) {
            logger.error("com.dneero.dao.Paybloggertransaction", ex);
            return new Paybloggertransaction();
        }
    }

    // Constructors

    /** default constructor */
    public Paybloggertransaction() {
    }


    public boolean canRead(User user){
        Payblogger payblogger = Payblogger.get(paybloggerid);
        return payblogger.canRead(user);
    }

    public boolean canEdit(User user){
        return canRead(user);
    }



    // Property accessors



    public int getPaybloggertransactionid() {
        return paybloggertransactionid;
    }

    public void setPaybloggertransactionid(int paybloggertransactionid) {
        this.paybloggertransactionid = paybloggertransactionid;
    }

    public int getPaybloggerid() {
        return paybloggerid;
    }

    public void setPaybloggerid(int paybloggerid) {
        this.paybloggerid = paybloggerid;
    }

    public Date getTransactiondate() {
        return transactiondate;
    }

    public void setTransactiondate(Date transactiondate) {
        this.transactiondate = transactiondate;
    }

    public Double getAmt() {
        return amt;
    }

    public void setAmt(Double amt) {
        this.amt = amt;
    }

    public boolean getIssuccessful() {
        return issuccessful;
    }

    public void setIssuccessful(boolean issuccessful) {
        this.issuccessful = issuccessful;
    }

    public String getNotes() {
        return notes;
    }

    public void setNotes(String notes) {
        this.notes = notes;
    }

    
}
