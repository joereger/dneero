package com.dneero.dao;

import com.dneero.util.GeneralException;
import com.dneero.dao.hibernate.BasePersistentClass;
import com.dneero.dao.hibernate.RegerEntity;
import com.dneero.dao.hibernate.HibernateUtil;
import org.apache.log4j.Logger;

import java.util.Set;
import java.util.HashSet;
// Generated Apr 17, 2006 3:45:25 PM by Hibernate Tools 3.1.0.beta4



/**
 * User generated by hbm2java
 */

public class User extends BasePersistentClass implements java.io.Serializable, RegerEntity {


    // Fields    

     private int userid;
     private String email;
     private String password;
     private String firstname;
     private String lastname;

     //Association
    private Set<Userrole> userroles = new HashSet<Userrole>();
    public Set<Userrole> getUserroles() {
        return userroles;
    }
    public void setUserroles(Set<Userrole> userroles) {
        this.userroles = userroles;
    }

    private Set<Blogger> bloggers = new HashSet<Blogger>();
    public Set<Blogger> getBloggers() {
        return bloggers;
    }
    public void setBloggers(Set<Blogger> bloggers) {
        this.bloggers = bloggers;
    }

    //Validator
    public void validateRegerEntity() throws GeneralException {

    }

    //Loader
    public void load(){

    }

    public static User get(int id) {
        Logger logger = Logger.getLogger("com.dneero.dao.User");
        try {
            logger.debug("User.get(" + id + ") called.");
            User obj = (User) HibernateUtil.getSession().get(User.class, id);
            if (obj == null) {
                logger.debug("User.get(" + id + ") returning new instance because hibernate returned null.");
                return new User();
            }
            return obj;
        } catch (Exception ex) {
            logger.error("com.dneero.dao.User", ex);
            return new User();
        }
    }

    // Constructors

    /** default constructor */
    public User() {
    }

    
    /** full constructor */
    public User(int userid, String email, String password, String firstname, String lastname) {
        this.userid = userid;
        this.email = email;
        this.password = password;
        this.firstname = firstname;
        this.lastname = lastname;
    }
    

   
    // Property accessors

    public int getUserid() {
        return this.userid;
    }
    
    public void setUserid(int userid) {
        this.userid = userid;
    }

    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }

    public String getFirstname() {
        return this.firstname;
    }
    
    public void setFirstname(String firstname) {
        this.firstname = firstname;
    }

    public String getLastname() {
        return this.lastname;
    }
    
    public void setLastname(String lastname) {
        this.lastname = lastname;
    }
   








}
