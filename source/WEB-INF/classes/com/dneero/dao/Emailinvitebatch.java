package com.dneero.dao;

import com.dneero.dao.hibernate.BasePersistentClass;
import com.dneero.dao.hibernate.HibernateUtil;
import com.dneero.session.AuthControlled;

import java.util.Date;
import java.util.Set;
import java.util.HashSet;

import org.apache.log4j.Logger;

/**
 * Blogger generated by hbm2java
 */

public class Emailinvitebatch extends BasePersistentClass implements java.io.Serializable, AuthControlled {


    // Fields
     private int emailinvitebatchid;
     private int researcherid;
     private Date date;
     private int surveyiduserisinvitedto;
     private String subject;
     private String message;

     private Set<Emailinvitebatchaddress> emailinvitebatchaddresses = new HashSet<Emailinvitebatchaddress>();
     public Set<Emailinvitebatchaddress> getEmailinvitebatchaddresses() {
        return emailinvitebatchaddresses;
     }
     public void setEmailinvitebatchaddresses(Set<Emailinvitebatchaddress> emailinvitebatchaddresses) {
        this.emailinvitebatchaddresses = emailinvitebatchaddresses;
     }


    public static Emailinvitebatch get(int id) {
        Logger logger = Logger.getLogger("com.dneero.dao.Emailinvitebatch");
        try {
            logger.debug("Emailinvitebatch.get(" + id + ") called.");
            Emailinvitebatch obj = (Emailinvitebatch) HibernateUtil.getSession().get(Emailinvitebatch.class, id);
            if (obj == null) {
                logger.debug("Emailinvitebatch.get(" + id + ") returning new instance because hibernate returned null.");
                return new Emailinvitebatch();
            }
            return obj;
        } catch (Exception ex) {
            logger.error("com.dneero.dao.Emailinvitebatch", ex);
            return new Emailinvitebatch();
        }
    }

    // Constructors

    /** default constructor */
    public Emailinvitebatch() {
    }

    public boolean canRead(User user){
        if (user.getUserid()==Researcher.get(researcherid).getUserid()){
            return true;
        }
        return false;
    }

    public boolean canEdit(User user){
        return canRead(user);
    }




    // Property accessors


    public int getEmailinvitebatchid() {
        return emailinvitebatchid;
    }

    public void setEmailinvitebatchid(int emailinvitebatchid) {
        this.emailinvitebatchid = emailinvitebatchid;
    }

    public int getResearcherid() {
        return researcherid;
    }

    public void setResearcherid(int researcherid) {
        this.researcherid = researcherid;
    }

    public Date getDate() {
        return date;
    }

    public void setDate(Date date) {
        this.date = date;
    }

    public int getSurveyiduserisinvitedto() {
        return surveyiduserisinvitedto;
    }

    public void setSurveyiduserisinvitedto(int surveyiduserisinvitedto) {
        this.surveyiduserisinvitedto = surveyiduserisinvitedto;
    }

    public String getSubject() {
        return subject;
    }

    public void setSubject(String subject) {
        this.subject = subject;
    }

    public String getMessage() {
        return message;
    }

    public void setMessage(String message) {
        this.message = message;
    }
}
